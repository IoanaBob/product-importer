{application,espec,
             [{applications,[kernel,stdlib,elixir]},
              {description,"BDD testing framework for Elixir inspired by RSpec."},
              {modules,['Elixir.Calendar.ISO.Extension',
                        'Elixir.DateTime.Extension','Elixir.ESpec',
                        'Elixir.ESpec.Allow','Elixir.ESpec.AllowTo',
                        'Elixir.ESpec.Assert','Elixir.ESpec.AssertReceive',
                        'Elixir.ESpec.AssertReceive.AssertReceiveError',
                        'Elixir.ESpec.AssertionError',
                        'Elixir.ESpec.AssertionHelpers',
                        'Elixir.ESpec.Assertions.Accepted',
                        'Elixir.ESpec.Assertions.AssertReceive',
                        'Elixir.ESpec.Assertions.Be',
                        'Elixir.ESpec.Assertions.BeBetween',
                        'Elixir.ESpec.Assertions.BeCloseTo',
                        'Elixir.ESpec.Assertions.BeType',
                        'Elixir.ESpec.Assertions.Binary.HaveByteSize',
                        'Elixir.ESpec.Assertions.Boolean.BeFalse',
                        'Elixir.ESpec.Assertions.Boolean.BeFalsy',
                        'Elixir.ESpec.Assertions.Boolean.BeTrue',
                        'Elixir.ESpec.Assertions.Boolean.BeTruthy',
                        'Elixir.ESpec.Assertions.Change',
                        'Elixir.ESpec.Assertions.ChangeBy',
                        'Elixir.ESpec.Assertions.ChangeFromTo',
                        'Elixir.ESpec.Assertions.ChangeTo',
                        'Elixir.ESpec.Assertions.ContainExactly',
                        'Elixir.ESpec.Assertions.Enum.BeEmpty',
                        'Elixir.ESpec.Assertions.Enum.HaveAll',
                        'Elixir.ESpec.Assertions.Enum.HaveAny',
                        'Elixir.ESpec.Assertions.Enum.HaveCountBy',
                        'Elixir.ESpec.Assertions.Enum.HaveMax',
                        'Elixir.ESpec.Assertions.Enum.HaveMaxBy',
                        'Elixir.ESpec.Assertions.Enum.HaveMin',
                        'Elixir.ESpec.Assertions.Enum.HaveMinBy',
                        'Elixir.ESpec.Assertions.EnumString.Have',
                        'Elixir.ESpec.Assertions.EnumString.HaveAt',
                        'Elixir.ESpec.Assertions.EnumString.HaveCount',
                        'Elixir.ESpec.Assertions.Eq',
                        'Elixir.ESpec.Assertions.Eql',
                        'Elixir.ESpec.Assertions.Interface',
                        'Elixir.ESpec.Assertions.List.HaveHd',
                        'Elixir.ESpec.Assertions.List.HaveTl',
                        'Elixir.ESpec.Assertions.ListString.HaveFirst',
                        'Elixir.ESpec.Assertions.ListString.HaveLast',
                        'Elixir.ESpec.Assertions.Map.HaveKey',
                        'Elixir.ESpec.Assertions.Map.HaveValue',
                        'Elixir.ESpec.Assertions.Match',
                        'Elixir.ESpec.Assertions.MatchPattern',
                        'Elixir.ESpec.Assertions.PID.BeAlive',
                        'Elixir.ESpec.Assertions.RaiseException',
                        'Elixir.ESpec.Assertions.RefuteReceive',
                        'Elixir.ESpec.Assertions.Result.BeErrorResult',
                        'Elixir.ESpec.Assertions.Result.BeOkResult',
                        'Elixir.ESpec.Assertions.String.BeBlank',
                        'Elixir.ESpec.Assertions.String.BePrintable',
                        'Elixir.ESpec.Assertions.String.BeValidString',
                        'Elixir.ESpec.Assertions.String.EndWith',
                        'Elixir.ESpec.Assertions.String.StartWith',
                        'Elixir.ESpec.Assertions.ThrowTerm',
                        'Elixir.ESpec.Before',
                        'Elixir.ESpec.BeforeAndAfterAll',
                        'Elixir.ESpec.Configuration','Elixir.ESpec.Context',
                        'Elixir.ESpec.DatesTimes.Comparator',
                        'Elixir.ESpec.DatesTimes.DateTimeProtocol',
                        'Elixir.ESpec.DatesTimes.DateTimeProtocol.Date',
                        'Elixir.ESpec.DatesTimes.DateTimeProtocol.DateTime',
                        'Elixir.ESpec.DatesTimes.DateTimeProtocol.NaiveDateTime',
                        'Elixir.ESpec.DatesTimes.DateTimeProtocol.Time',
                        'Elixir.ESpec.DatesTimes.Delegator',
                        'Elixir.ESpec.DatesTimes.Types',
                        'Elixir.ESpec.DescribedModule','Elixir.ESpec.Diff',
                        'Elixir.ESpec.DocExample',
                        'Elixir.ESpec.DocExample.Error',
                        'Elixir.ESpec.DocTest','Elixir.ESpec.Example',
                        'Elixir.ESpec.ExampleHelpers',
                        'Elixir.ESpec.ExampleRunner',
                        'Elixir.ESpec.ExampleRunner.AfterExampleError',
                        'Elixir.ESpec.Expect','Elixir.ESpec.ExpectTo',
                        'Elixir.ESpec.Finally','Elixir.ESpec.Formatters.Base',
                        'Elixir.ESpec.Formatters.Doc',
                        'Elixir.ESpec.Formatters.Html',
                        'Elixir.ESpec.Formatters.Json',
                        'Elixir.ESpec.Formatters.WriteOutput',
                        'Elixir.ESpec.Let','Elixir.ESpec.Let.Impl',
                        'Elixir.ESpec.LetError','Elixir.ESpec.Mock',
                        'Elixir.ESpec.Output','Elixir.ESpec.RefuteReceive',
                        'Elixir.ESpec.RefuteReceive.RefuteReceiveError',
                        'Elixir.ESpec.Runner','Elixir.ESpec.Runner.Queue',
                        'Elixir.ESpec.Should','Elixir.ESpec.SuiteRunner',
                        'Elixir.ESpec.Support','Elixir.ESpec.To',
                        'Elixir.Integer.Extension','Elixir.Mix.Tasks.Espec',
                        'Elixir.Mix.Tasks.Espec.Cover',
                        'Elixir.Mix.Tasks.Espec.Init']},
              {registered,[]},
              {vsn,"1.7.0"}]}.
